//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClaimsDocsClient.proxyCDUser {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ClaimsDocsBizLogic")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdministratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IUDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ClaimsDocsClient.proxyCDUser.UserGroup> listUserGroupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Administrator {
            get {
                return this.AdministratorField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministratorField, value) != true)) {
                    this.AdministratorField = value;
                    this.RaisePropertyChanged("Administrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Approver {
            get {
                return this.ApproverField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproverField, value) != true)) {
                    this.ApproverField = value;
                    this.RaisePropertyChanged("Approver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designer {
            get {
                return this.DesignerField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignerField, value) != true)) {
                    this.DesignerField = value;
                    this.RaisePropertyChanged("Designer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMailAddress {
            get {
                return this.EMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailAddressField, value) != true)) {
                    this.EMailAddressField = value;
                    this.RaisePropertyChanged("EMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IUDateTime {
            get {
                return this.IUDateTimeField;
            }
            set {
                if ((this.IUDateTimeField.Equals(value) != true)) {
                    this.IUDateTimeField = value;
                    this.RaisePropertyChanged("IUDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reviewer {
            get {
                return this.ReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewerField, value) != true)) {
                    this.ReviewerField = value;
                    this.RaisePropertyChanged("Reviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignatureName {
            get {
                return this.SignatureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureNameField, value) != true)) {
                    this.SignatureNameField = value;
                    this.RaisePropertyChanged("SignatureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPassword {
            get {
                return this.UserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPasswordField, value) != true)) {
                    this.UserPasswordField = value;
                    this.RaisePropertyChanged("UserPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ClaimsDocsClient.proxyCDUser.UserGroup> listUserGroup {
            get {
                return this.listUserGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.listUserGroupField, value) != true)) {
                    this.listUserGroupField = value;
                    this.RaisePropertyChanged("listUserGroup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserGroup", Namespace="http://schemas.datacontract.org/2004/07/ClaimsDocsBizLogic")]
    [System.SerializableAttribute()]
    public partial class UserGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IUDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IUDateTime {
            get {
                return this.IUDateTimeField;
            }
            set {
                if ((this.IUDateTimeField.Equals(value) != true)) {
                    this.IUDateTimeField = value;
                    this.RaisePropertyChanged("IUDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="proxyCDUser.ICDUsers")]
    public interface ICDUsers {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserLogin", ReplyAction="http://tempuri.org/ICDUsers/UserLoginResponse")]
        ClaimsDocsClient.proxyCDUser.User UserLogin(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserCreate", ReplyAction="http://tempuri.org/ICDUsers/UserCreateResponse")]
        int UserCreate(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserRead", ReplyAction="http://tempuri.org/ICDUsers/UserReadResponse")]
        ClaimsDocsClient.proxyCDUser.User UserRead(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserReadByUserName", ReplyAction="http://tempuri.org/ICDUsers/UserReadByUserNameResponse")]
        ClaimsDocsClient.proxyCDUser.User UserReadByUserName(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserUpdate", ReplyAction="http://tempuri.org/ICDUsers/UserUpdateResponse")]
        int UserUpdate(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserSearch", ReplyAction="http://tempuri.org/ICDUsers/UserSearchResponse")]
        System.Collections.Generic.List<ClaimsDocsClient.proxyCDUser.User> UserSearch(string strSQLString, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserGroupSearch", ReplyAction="http://tempuri.org/ICDUsers/UserGroupSearchResponse")]
        System.Collections.Generic.List<ClaimsDocsClient.proxyCDUser.UserGroup> UserGroupSearch(int intUserID, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserGroupSearchByUserName", ReplyAction="http://tempuri.org/ICDUsers/UserGroupSearchByUserNameResponse")]
        System.Collections.Generic.List<ClaimsDocsClient.proxyCDUser.UserGroup> UserGroupSearchByUserName(string strUserName, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserGroupClear", ReplyAction="http://tempuri.org/ICDUsers/UserGroupClearResponse")]
        int UserGroupClear(ClaimsDocsClient.proxyCDUser.UserGroup objUserGroup, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDUsers/UserGroupCreate", ReplyAction="http://tempuri.org/ICDUsers/UserGroupCreateResponse")]
        int UserGroupCreate(ClaimsDocsClient.proxyCDUser.UserGroup objUserGroup, string strConnectionString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICDUsersChannel : ClaimsDocsClient.proxyCDUser.ICDUsers, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CDUsersClient : System.ServiceModel.ClientBase<ClaimsDocsClient.proxyCDUser.ICDUsers>, ClaimsDocsClient.proxyCDUser.ICDUsers {
        
        public CDUsersClient() {
        }
        
        public CDUsersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CDUsersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CDUsersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CDUsersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClaimsDocsClient.proxyCDUser.User UserLogin(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString) {
            return base.Channel.UserLogin(objUser, strConnectionString);
        }
        
        public int UserCreate(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString) {
            return base.Channel.UserCreate(objUser, strConnectionString);
        }
        
        public ClaimsDocsClient.proxyCDUser.User UserRead(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString) {
            return base.Channel.UserRead(objUser, strConnectionString);
        }
        
        public ClaimsDocsClient.proxyCDUser.User UserReadByUserName(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString) {
            return base.Channel.UserReadByUserName(objUser, strConnectionString);
        }
        
        public int UserUpdate(ClaimsDocsClient.proxyCDUser.User objUser, string strConnectionString) {
            return base.Channel.UserUpdate(objUser, strConnectionString);
        }
        
        public System.Collections.Generic.List<ClaimsDocsClient.proxyCDUser.User> UserSearch(string strSQLString, string strConnectionString) {
            return base.Channel.UserSearch(strSQLString, strConnectionString);
        }
        
        public System.Collections.Generic.List<ClaimsDocsClient.proxyCDUser.UserGroup> UserGroupSearch(int intUserID, string strConnectionString) {
            return base.Channel.UserGroupSearch(intUserID, strConnectionString);
        }
        
        public System.Collections.Generic.List<ClaimsDocsClient.proxyCDUser.UserGroup> UserGroupSearchByUserName(string strUserName, string strConnectionString) {
            return base.Channel.UserGroupSearchByUserName(strUserName, strConnectionString);
        }
        
        public int UserGroupClear(ClaimsDocsClient.proxyCDUser.UserGroup objUserGroup, string strConnectionString) {
            return base.Channel.UserGroupClear(objUserGroup, strConnectionString);
        }
        
        public int UserGroupCreate(ClaimsDocsClient.proxyCDUser.UserGroup objUserGroup, string strConnectionString) {
            return base.Channel.UserGroupCreate(objUserGroup, strConnectionString);
        }
    }
}
