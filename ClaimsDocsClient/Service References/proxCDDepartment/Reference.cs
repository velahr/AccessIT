//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClaimsDocsClient.proxCDDepartment {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/ClaimsDocsBizLogic")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IUDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IUDateTime {
            get {
                return this.IUDateTimeField;
            }
            set {
                if ((this.IUDateTimeField.Equals(value) != true)) {
                    this.IUDateTimeField = value;
                    this.RaisePropertyChanged("IUDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="proxCDDepartment.ICDDepartments")]
    public interface ICDDepartments {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDDepartments/DepartmentCreate", ReplyAction="http://tempuri.org/ICDDepartments/DepartmentCreateResponse")]
        int DepartmentCreate(ClaimsDocsClient.proxCDDepartment.Department objDepartment, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDDepartments/DepartmentRead", ReplyAction="http://tempuri.org/ICDDepartments/DepartmentReadResponse")]
        ClaimsDocsClient.proxCDDepartment.Department DepartmentRead(ClaimsDocsClient.proxCDDepartment.Department objDepartment, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDDepartments/DepartmentUpdate", ReplyAction="http://tempuri.org/ICDDepartments/DepartmentUpdateResponse")]
        int DepartmentUpdate(ClaimsDocsClient.proxCDDepartment.Department objDepartment, string strConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDDepartments/DepartmentSearch", ReplyAction="http://tempuri.org/ICDDepartments/DepartmentSearchResponse")]
        ClaimsDocsClient.proxCDDepartment.Department[] DepartmentSearch(string strSQLString, string strConnectionString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ICDDepartmentsChannel : ClaimsDocsClient.proxCDDepartment.ICDDepartments, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CDDepartmentsClient : System.ServiceModel.ClientBase<ClaimsDocsClient.proxCDDepartment.ICDDepartments>, ClaimsDocsClient.proxCDDepartment.ICDDepartments {
        
        public CDDepartmentsClient() {
        }
        
        public CDDepartmentsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CDDepartmentsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CDDepartmentsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CDDepartmentsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int DepartmentCreate(ClaimsDocsClient.proxCDDepartment.Department objDepartment, string strConnectionString) {
            return base.Channel.DepartmentCreate(objDepartment, strConnectionString);
        }
        
        public ClaimsDocsClient.proxCDDepartment.Department DepartmentRead(ClaimsDocsClient.proxCDDepartment.Department objDepartment, string strConnectionString) {
            return base.Channel.DepartmentRead(objDepartment, strConnectionString);
        }
        
        public int DepartmentUpdate(ClaimsDocsClient.proxCDDepartment.Department objDepartment, string strConnectionString) {
            return base.Channel.DepartmentUpdate(objDepartment, strConnectionString);
        }
        
        public ClaimsDocsClient.proxCDDepartment.Department[] DepartmentSearch(string strSQLString, string strConnectionString) {
            return base.Channel.DepartmentSearch(strSQLString, strConnectionString);
        }
    }
}
